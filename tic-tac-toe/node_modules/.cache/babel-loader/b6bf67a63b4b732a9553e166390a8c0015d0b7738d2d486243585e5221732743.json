{"ast":null,"code":"var _jsxFileName = \"H:\\\\ReactNativeTutorials\\\\tic-tac-toe\\\\src\\\\components\\\\GameBoard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultBoard = [[null, null, null], [null, null, null], [null, null, null]];\nexport default function GameBoard({\n  onSelectSquare,\n  turns\n}) {\n  // const [gamebaord, updateGameBoard] = useState(defaultBoard);\n  //\n  // function handleUserClick(rowIndex, colIndex) {\n  //     updateGameBoard((prevGameBoard) => {\n  //         const updatedBoard = [...prevGameBoard.map(innerArry => [...innerArry])];\n  //         updatedBoard[rowIndex][colIndex] = activePlayerSymbol;\n  //         return updatedBoard;\n  //     });\n  //     onSelectSquare();\n  // }\n\n  let gamebaord = defaultBoard;\n  for (const turn of turns) {\n    const {\n      squre,\n      player\n    } = turn;\n    const {\n      row,\n      col\n    } = squre;\n  }\n  gamebaord[row][col] = player;\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    id: \"game-board\",\n    children: gamebaord.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: row.map((player, colIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSelectSquare,\n            children: player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","defaultBoard","GameBoard","onSelectSquare","turns","gamebaord","turn","squre","player","row","col","id","children","map","rowIndex","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/ReactNativeTutorials/tic-tac-toe/src/components/GameBoard.js"],"sourcesContent":["import React from 'react';\r\nconst defaultBoard = [\r\n    [null, null, null],\r\n    [null, null, null],\r\n    [null, null, null]\r\n];\r\nexport default function GameBoard({ onSelectSquare, turns }) {\r\n    // const [gamebaord, updateGameBoard] = useState(defaultBoard);\r\n    //\r\n    // function handleUserClick(rowIndex, colIndex) {\r\n    //     updateGameBoard((prevGameBoard) => {\r\n    //         const updatedBoard = [...prevGameBoard.map(innerArry => [...innerArry])];\r\n    //         updatedBoard[rowIndex][colIndex] = activePlayerSymbol;\r\n    //         return updatedBoard;\r\n    //     });\r\n    //     onSelectSquare();\r\n    // }\r\n\r\n    let gamebaord = defaultBoard;\r\n    for (const turn of turns) {\r\n        const { squre, player } = turn;\r\n        const { row, col } = squre;\r\n\r\n    }\r\n    gamebaord[row][col] = player;\r\n\r\n    return (\r\n        <ol id=\"game-board\">\r\n            {gamebaord.map((row, rowIndex) => (\r\n                <li key={rowIndex}>\r\n                    <ol>\r\n                        {row.map((player, colIndex) => (\r\n                            <li key={colIndex}>\r\n                                <button onClick={onSelectSquare}>{player}</button>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,YAAY,GAAG,CACjB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CACrB;AACD,eAAe,SAASC,SAASA,CAAC;EAAEC,cAAc;EAAEC;AAAM,CAAC,EAAE;EACzD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,SAAS,GAAGJ,YAAY;EAC5B,KAAK,MAAMK,IAAI,IAAIF,KAAK,EAAE;IACtB,MAAM;MAAEG,KAAK;MAAEC;IAAO,CAAC,GAAGF,IAAI;IAC9B,MAAM;MAAEG,GAAG;MAAEC;IAAI,CAAC,GAAGH,KAAK;EAE9B;EACAF,SAAS,CAACI,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGF,MAAM;EAE5B,oBACIR,OAAA;IAAIW,EAAE,EAAC,YAAY;IAAAC,QAAA,EACdP,SAAS,CAACQ,GAAG,CAAC,CAACJ,GAAG,EAAEK,QAAQ,kBACzBd,OAAA;MAAAY,QAAA,eACIZ,OAAA;QAAAY,QAAA,EACKH,GAAG,CAACI,GAAG,CAAC,CAACL,MAAM,EAAEO,QAAQ,kBACtBf,OAAA;UAAAY,QAAA,eACIZ,OAAA;YAAQgB,OAAO,EAAEb,cAAe;YAAAS,QAAA,EAAEJ;UAAM;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC,GAD7CL,QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC,GAPAN,QAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQb,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAACC,EAAA,GAnCuBnB,SAAS;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}