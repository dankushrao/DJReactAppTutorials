{"ast":null,"code":"var _jsxFileName = \"H:\\\\ReactNativeTutorials\\\\tic-tac-toe\\\\src\\\\components\\\\GameBoard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultBoard = [[null, null, null], [null, null, null], [null, null, null]];\nexport default function GameBoard({\n  onSelectSquare,\n  gameturns\n}) {\n  let gamebaord = defaultBoard;\n  for (const turn of gameturns) {\n    //   const { square, player } = turn;\n    //   const { row, col } = square;\n  }\n  //gamebaord[row][col] = player;\n\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    id: \"game-board\",\n    children: gamebaord.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: row.map((player, colIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onSelectSquare(rowIndex, colIndex),\n            children: player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","defaultBoard","GameBoard","onSelectSquare","gameturns","gamebaord","turn","id","children","map","row","rowIndex","player","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/ReactNativeTutorials/tic-tac-toe/src/components/GameBoard.js"],"sourcesContent":["import React from 'react';\r\nconst defaultBoard = [\r\n    [null, null, null],\r\n    [null, null, null],\r\n    [null, null, null]\r\n];\r\nexport default function GameBoard({onSelectSquare, gameturns}) {\r\n    let gamebaord = defaultBoard;\r\n    for (const turn of gameturns) {\r\n     //   const { square, player } = turn;\r\n     //   const { row, col } = square;\r\n    }\r\n    //gamebaord[row][col] = player;\r\n\r\n    return (\r\n        <ol id=\"game-board\">\r\n            {gamebaord.map((row, rowIndex) => (\r\n                <li key={rowIndex}>\r\n                    <ol>\r\n                        {row.map((player, colIndex) => (\r\n                            <li key={colIndex}>\r\n                                <button onClick={()=>onSelectSquare(rowIndex,colIndex)}>{player}</button>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,YAAY,GAAG,CACjB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CACrB;AACD,eAAe,SAASC,SAASA,CAAC;EAACC,cAAc;EAAEC;AAAS,CAAC,EAAE;EAC3D,IAAIC,SAAS,GAAGJ,YAAY;EAC5B,KAAK,MAAMK,IAAI,IAAIF,SAAS,EAAE;IAC7B;IACA;EAAA;EAED;;EAEA,oBACIJ,OAAA;IAAIO,EAAE,EAAC,YAAY;IAAAC,QAAA,EACdH,SAAS,CAACI,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACzBX,OAAA;MAAAQ,QAAA,eACIR,OAAA;QAAAQ,QAAA,EACKE,GAAG,CAACD,GAAG,CAAC,CAACG,MAAM,EAAEC,QAAQ,kBACtBb,OAAA;UAAAQ,QAAA,eACIR,OAAA;YAAQc,OAAO,EAAEA,CAAA,KAAIX,cAAc,CAACQ,QAAQ,EAACE,QAAQ,CAAE;YAAAL,QAAA,EAAEI;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC,GADpEL,QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC,GAPAP,QAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQb,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAACC,EAAA,GAvBuBjB,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}